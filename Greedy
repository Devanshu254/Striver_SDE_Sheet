Q1. Job Sequencing.
solution -> 
class Solution 
{
    public:
    static bool comparision(Job a, Job b) {
        return (a.profit > b.profit);
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        vector<int> v;
        sort(arr, arr+n, comparision);
        int maxi = arr[0].dead;
        for(int i=1;i<n;i++) {
            maxi = max(maxi, arr[i].dead);
        }
        int slot[maxi+1];
        for(int i=1;i<=maxi;i++) {
            slot[i] = -1;
        }
        int jobProfit = 0, countJobs = 0;
        for(int i=0;i<n;i++) {
            for(int j=arr[i].dead;j>0;j--) {
                if(slot[j] == -1){
                    countJobs++;
                    slot[j] = i;
                    jobProfit += arr[i].profit;
                    break;
                }
            }
        }
        v.push_back(countJobs);
        v.push_back(jobProfit);
        return v;
    } 
};
